trigger: none

variables:
- group: PSACTION1_SIGNATURE

resources:
  repositories:
    - repository: self
      type: github
      name: Action1Corp/PSAction1
      endpoint: 'Action1 GitHub'
      branch: 'main'

pool:
  vmImage: 'windows-latest'

jobs:
- job: SignScripts
  displayName: 'Sign scripts'
  steps:

    - checkout: self
      clean: true
      fetchDepth: 0
      persistCredentials: true

    - task: PowerShell@2
      displayName: 'Prepare PowerShell Files to Sign'
      inputs:
        targetType: inline
        script: |
          Get-ChildItem -Path "$(Build.SourcesDirectory)" -Recurse -Include *.ps1, *.psm1, *.psd1 -File |
            ForEach-Object {
                  $filePath = "$($_.FullName)"
                  $fileBaseName = (Get-Item $filePath).BaseName
                  $fileExtension = (Get-Item $filePath).Extension
                  $signedFilePath = Join-Path -Path "$(Build.ArtifactStagingDirectory)" -ChildPath "$fileBaseName$fileExtension"
                  Copy-Item -Path $filePath -Destination $signedFilePath
            }

    - task: AzureCLI@2
      displayName: 'Prepare Azure Secure Connection'
      inputs:
        azureSubscription: 'Action1 Azure'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          Write-Host "##vso[task.setvariable variable=ARM_CLIENT_ID]$env:servicePrincipalId"
          Write-Host "##vso[task.setvariable variable=ARM_TENANT_ID]$env:tenantId"
          Write-Host "##vso[task.setvariable variable=ARM_ID_TOKEN]$env:idToken"
        addSpnToEnvironment: true

    - task: PowerShell@2
      displayName: 'Establish Azure Secure Connection'
      inputs:
        targetType: 'inline'
        script: |
          az login --service-principal -u $(ARM_CLIENT_ID) --tenant $(ARM_TENANT_ID) --allow-no-subscriptions --federated-token $(ARM_ID_TOKEN)

    - task: TrustedSigning@0
      displayName: 'Azure Trusted Signing'
      inputs:
        ExcludeSharedTokenCacheCredential: true
        ExcludeVisualStudioCredential: true
        ExcludeVisualStudioCodeCredential: true
        Endpoint: '$(AZURE_TS_ENDPOINT)'
        CertificateProfileName: '$(AZURE_TS_CERTIFICATE_PROFILE_NAME)'
        FilesFolder: '$(Build.ArtifactStagingDirectory)'
        FilesFolderFilter: 'psm1,psd1,ps1'
        FilesFolderRecurse: true
        FileDigest: 'SHA256'
        CodeSigningAccountName: '$(AZURE_TS_ACCOUNT_NAME)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Internally'
      condition: always()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'release'
        publishLocation: 'Container'
