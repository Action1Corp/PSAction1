trigger: none

variables:
- group: PSACTION1_SIGNATURE

resources:
  repositories:
    - repository: self
      type: github
      name: Action1Corp/PSAction1
      endpoint: 'Action1 GitHub'
      branch: 'main'

pool:
  vmImage: 'windows-latest'

jobs:
- job: SignScripts
  displayName: 'Sign scripts'
  steps:

    - checkout: self
      clean: true
      fetchDepth: 0
      persistCredentials: true

    - task: PowerShell@2
      displayName: 'Login to Azure CLI using Service Principal'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Logging in to Azure CLI..."

          az login --service-principal `
            --username "$env:AZURE_CLIENT_ID" `
            --password "$env:AZURE_CLIENT_SECRET" `
            --tenant "$env:AZURE_TENANT_ID"

          az account set --subscription "$env:AZURE_SUBSCRIPTION_ID"

          Write-Host "Azure CLI login successful!"
      env:
        AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
        AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
        AZURE_TENANT_ID: $(AZURE_TENANT_ID)
        AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)

    - task: PowerShell@2
      displayName: 'Sign PowerShell Files'
      inputs:
        targetType: inline
        script: |
          Get-ChildItem -Path "$(Build.SourcesDirectory)" -Recurse -Include *.ps1, *.psm1, *.psd1 -File |
            ForEach-Object {
                Write-Host "Signing: $($_.FullName)"
                try {
                  $filePath = "$($_.FullName)"
                  $fileExtension = Split-Path $filePath -Leaf | Split-Path -Extension
                  $hashPath = $filePath -replace ".$fileExtension", ".hash"
                  $signaturePath = $filePath -replace ".$fileExtension", ".bin"
                  $signedFilePath = $filePath -replace "$(Build.SourcesDirectory)", "$(Build.ArtifactStagingDirectory)"
                  write-host "filePath=$filePath"
                  write-host "fileExtension=$fileExtension"
                  write-host "hashPath=$hashPath"
                  write-host "signaturePath=$signaturePath"
                  $hashBytes = Get-FileHash -Algorithm SHA256 -Path $filePath
                  $hashBytes.Hash | Out-File -Encoding ascii -FilePath $hashPath
                  $hashValue = Get-Content -Path $hashPath -Raw
                  Write-Host "SHA-256 hash generated and saved at: $hashPath"
                  $signingResult = az keyvault sign --vault-name $env:AZURE_KEY_VAULT_NAME --name $env:CERTIFICATE_NAME --algorithm RS256 --digest $hashValue | ConvertFrom-Json
                  $signature = $signingResult.result
                  Write-Host "Signature generated: $signature"
                  $signature | Out-File -Encoding ascii -FilePath $signaturePath
                  $signatureContent = Get-Content -Path $signaturePath -Raw
                  $signedFile = @"
          # SIG # Begin signature block
          $signatureContent
          # SIG # End signature block

          $(Get-Content -Path $filePath)
          "@
                  $signedFile | Out-File -Encoding utf8 -FilePath $signedFilePath

                  Write-Host "PowerShell script signed successfully!"
                }
                catch{
                  Write-Host "##vso[task.logissue type=error;]Failed to sign '$($_.FullName)': $($_.Exception.Message)"
                  Write-Host "##vso[task.complete result=Failed;]Failed to sign '$($_.FullName)': $($_.Exception.Message)"
                }
            }
      env:
        AZURE_KEY_VAULT_NAME: $(AZURE_KEY_VAULT_NAME)
        CERTIFICATE_NAME: $(CERTIFICATE_NAME)
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Internally'
      condition: always()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'release'
        publishLocation: 'Container'
